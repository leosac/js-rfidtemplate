{
  "type": "object",
  "properties": {
    "firstAction": {
      "allOf": [
        {
            "$ref": "#/definitions/ChipAction"
        }
      ],
      "title": "Action",
      "description": "The first encoding action to execute."
    },
    "forceCardType": {
      "enum": [
        "Mifare",
        "DESFire",
        "DESFireEV1",
        "DESFireEV2",
        "DESFireEV3",
        "MifareUltralightC"
      ],
      "enumNames": [
        "MIFARE Classic",
        "MIFARE DESFire",
        "MIFARE DESFire EV1",
        "MIFARE DESFire EV2",
        "MIFARE DESFire EV3",
        "MIFARE Ultralight C"
      ],
      "type": "string",
      "title": "Force Card Type",
      "description": "Force the card type to use (optional).",
      "nullable": true
    },
    "sam": {
      "allOf": [
        {
          "$ref": "#/definitions/SAMProperties"
        }
      ],
      "title": "NXP SAM AV2/AV3",
      "description": "The optional SAM properties."
    }
  },
  "description": "Content definition for an encoding fragment template.",
  "definitions": {
    "AccessControlDataField": {
      "required": [
      "$type"
    ],
    "discriminator": {
      "propertyName": "$type",
      "mapping": {
        "Binary": "#/definitions/BinaryDataField",
        "Number": "#/definitions/NumberDataField",
        "Parity": "#/definitions/ParityDataField",
        "String": "#/definitions/StringDataField"
      }
    },
    "oneOf": [
        {
          "$ref": "#/definitions/BinaryDataField"
        },
        {
          "$ref": "#/definitions/NumberDataField"
        },
        {
          "$ref": "#/definitions/ParityDataField"
        },
        {
          "$ref": "#/definitions/StringDataField"
        }
      ]
  },
    "AccessControlDataService": {
      "type": "object",
      "anyOf": [
        {
          "title": "Format Definition",
          "allOf": [
            {
              "$ref": "#/definitions/EncodingServiceProperties"
            }
          ],
          "properties": {
            "formatDefinition": {
              "type": "object",
              "title": "Format",
              "description": "The definition of the access control format to use.",
              "required": [
                "$type"
              ],
              "discriminator": {
                "propertyName": "$type",
                "mapping": {
                  "Binary32": "#/definitions/Binary32AccessControlFormat",
                  "Binary56": "#/definitions/Binary56AccessControlFormat",
                  "Binary64": "#/definitions/Binary64AccessControlFormat",
                  "Custom": "#/definitions/CustomAccessControlFormat",
                  "Wiegand26": "#/definitions/Wiegand26AccessControlFormat",
                  "Wiegand34": "#/definitions/Wiegand34AccessControlFormat",
                  "Wiegand34WithFacility": "#/definitions/Wiegand34WithFacilityAccessControlFormat",
                  "Wiegand35": "#/definitions/Wiegand35AccessControlFormat",
                  "Wiegand37": "#/definitions/Wiegand37AccessControlFormat",
                  "Wiegand37WithFacility": "#/definitions/Wiegand37WithFacilityAccessControlFormat"
                }
              },
              "anyOf": [
                {
                  "$ref": "#/definitions/Binary32AccessControlFormat"
                },
                {
                  "$ref": "#/definitions/Binary56AccessControlFormat"
                },
                {
                  "$ref": "#/definitions/Binary64AccessControlFormat"
                },
                {
                  "$ref": "#/definitions/CustomAccessControlFormat"
                },
                {
                  "$ref": "#/definitions/Wiegand26AccessControlFormat"
                },
                {
                  "$ref": "#/definitions/Wiegand34AccessControlFormat"
                },
                {
                  "$ref": "#/definitions/Wiegand34WithFacilityAccessControlFormat"
                },
                {
                  "$ref": "#/definitions/Wiegand35AccessControlFormat"
                },
                {
                  "$ref": "#/definitions/Wiegand37AccessControlFormat"
                },
                {
                  "$ref": "#/definitions/Wiegand37WithFacilityAccessControlFormat"
                }
              ],
              "nullable": true
            }
          }
        },
        {
          "title": "XML Format (deprecated)",
          "allOf": [
            {
              "$ref": "#/definitions/EncodingServiceProperties"
            }
          ],
          "properties": {
            "format": {
              "type": "string",
              "title": "Format (XML)",
              "description": "The XML description of the access control format to use.",
              "nullable": true
            }
          }
        }
      ],
      "description": "Access control data encoding service properties."
    },
    "ActionTrigger": {
      "type": "object",
      "properties": {
        "callActions": {
          "type": "array",
          "title": "Run Actions",
          "items": {
            "$ref": "#/definitions/ChipAction",
            "description": "Encoding Action Properties"
          },
          "description": "The following action to execute.",
          "nullable": true
        },
        "throw": {
          "type": "boolean",
          "title": "Throw",
          "description": "True to throw an exception and end the fragment production, false otherwise.",
          "nullable": true
        },
        "throwCustomMessage": {
          "type": "string",
          "title": "Custom error message",
          "description": "An optional custom message to throw (if enabled).",
          "nullable": true
        }
      },
      "description": "Action Trigger definition"
    },
    "Binary32AccessControlFormat": {
      "type": "object",
      "title": "32-bit",
      "properties": {
        "$type": {
          "enum": [ "Binary32" ],
          "default": "Binary32",
          "x-hidden": true
        }
      }
    },
    "Binary56AccessControlFormat": {
      "type": "object",
      "title": "56-bit",
      "properties": {
        "$type": {
          "enum": [ "Binary56" ],
          "default": "Binary56",
          "x-hidden": true
        }
      }
    },
    "Binary64AccessControlFormat": {
      "type": "object",
      "title": "64-bit",
      "properties": {
        "$type": {
          "enum": [ "Binary64" ],
          "default": "Binary64",
          "x-hidden": true
        }
      }
    },
    "BinaryDataField": {
      "type": "object",
      "title": "Binary Data Field",
      "allOf": [
        {
          "$ref": "#/definitions/ValueDataField"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "Binary" ],
          "default": "Binary",
          "x-hidden": true
        },
        "paddingChar": {
          "type": "string",
          "title": "Padding Byte",
          "description": "The padding byte (2 hexadecimal characters).",
          "maxLength": 2,
          "pattern": "^[a-fA-F0-9]+$"
        },
        "value": {
          "type": "string",
          "title": "Value",
          "description": "Hexstring representing the binary value.",
          "pattern": "^[a-fA-F0-9]+$"
        }
      },
      "description": "A field with binary data."
    },
    "CardSerialNumberService": {
      "type": "object",
      "title": "Get Card Serial Number",
      "allOf": [
        {
          "$ref": "#/definitions/EncodingServiceProperties"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "CardSerialNumberService" ],
          "default": "CardSerialNumberService",
          "x-hidden": true
        },
        "checkCSN": {
          "type": "boolean",
          "title": "Check CSN",
          "description": "True to check for CSN value match, false otherwise."
        }
      },
      "description": "Card Serial Number encoding service properties."
    },
    "ChangeActionPropertyService": {
      "type": "object",
      "title": "Change Action Property",
      "allOf": [
        {
          "$ref": "#/definitions/EncodingServiceProperties"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "ChangeActionPropertyService" ],
          "default": "ChangeActionPropertyService",
          "x-hidden": true
        },
        "propertyName": {
          "type": "string",
          "title": "Property Name",
          "description": "The action property name to update.",
          "nullable": true
        },
        "sourceField": {
          "type": "string",
          "title": "Source Field",
          "description": "The data field name from where to get the updated data.",
          "nullable": true
        }
      },
      "description": "Service to dynamically update action property."
    },
    "ChipAction": {
      "required": [
        "$type"
      ],
      "discriminator": {
        "propertyName": "$type",
        "mapping": {
          "Nothing": "#/definitions/Nothing",
          "UltralightC.Authenticate": "#/definitions/UltralightC.Authenticate",
          "UltralightC.ChangeKey": "#/definitions/UltralightC.ChangeKey",
          "UltralightC.LockPage": "#/definitions/UltralightC.LockPage",
          "UltralightC.ReadPage": "#/definitions/UltralightC.ReadPage",
          "UltralightC.WritePage": "#/definitions/UltralightC.WritePage",
          "DESFire.AbortTransaction": "#/definitions/DESFire.AbortTransaction",
          "DESFire.Authenticate": "#/definitions/DESFire.Authenticate",
          "DESFire.AuthenticateAES": "#/definitions/DESFire.AuthenticateAES",
          "DESFire.AuthenticateEV2First": "#/definitions/DESFire.AuthenticateEV2First",
          "DESFire.ChangeFileSettings": "#/definitions/DESFire.ChangeFileSettings",
          "DESFire.CommitTransaction": "#/definitions/DESFire.CommitTransaction",
          "DESFire.CreateApplication": "#/definitions/DESFire.CreateApplication",
          "DESFire.CreateApplicationEV1": "#/definitions/DESFire.CreateApplicationEV1",
          "DESFire.CreateApplicationEV2": "#/definitions/DESFire.CreateApplicationEV2",
          "DESFire.CreateBackupFile": "#/definitions/DESFire.CreateBackupFile",
          "DESFire.CreateCyclicRecordFile": "#/definitions/DESFire.CreateCyclicRecordFile",
          "DESFire.CreateDelegatedApplication": "#/definitions/DESFire.CreateDelegatedApplication",
          "DESFire.CreateLinearRecordFile": "#/definitions/DESFire.CreateLinearRecordFile",
          "DESFire.CreateStdDataFile": "#/definitions/DESFire.CreateStdDataFile",
          "DESFire.CreateStdDataFileEV1": "#/definitions/DESFire.CreateStdDataFileEV1",
          "DESFire.CreateTransactionMACFile": "#/definitions/DESFire.CreateTransactionMACFile",
          "DESFire.CreateValueFile": "#/definitions/DESFire.CreateValueFile",
          "DESFire.Credit": "#/definitions/DESFire.Credit",
          "DESFire.Debit": "#/definitions/DESFire.Debit",
          "DESFire.DeleteApplication": "#/definitions/DESFire.DeleteApplication",
          "DESFire.DeleteFile": "#/definitions/DESFire.DeleteFile",
          "DESFire.Erase": "#/definitions/DESFire.Erase",
          "DESFire.FinalizeKeySet": "#/definitions/DESFire.FinalizeKeySet",
          "DESFire.InitializeKeySet": "#/definitions/DESFire.InitializeKeySet",
          "DESFire.ProximityCheck": "#/definitions/DESFire.ProximityCheck",
          "DESFire.ReadData": "#/definitions/DESFire.ReadData",
          "DESFire.RollKeySet": "#/definitions/DESFire.RollKeySet",
          "DESFire.SelectApplication": "#/definitions/DESFire.SelectApplication",
          "DESFire.SetConfiguration": "#/definitions/DESFire.SetConfiguration",
          "DESFire.SetConfigurationEV2": "#/definitions/DESFire.SetConfigurationEV2",
          "DESFire.SetConfigurationMessaging": "#/definitions/DESFire.SetConfigurationMessaging",
          "DESFire.WriteData": "#/definitions/DESFire.WriteData",
          "DESFire.WriteRecord": "#/definitions/DESFire.WriteRecord"
        }
      },
      "oneOf": [
        {
          "$ref": "#/definitions/Nothing"
        },
        {
          "$ref": "#/definitions/UltralightC.Authenticate"
        },
        {
          "$ref": "#/definitions/UltralightC.ChangeKey"
        },
        {
          "$ref": "#/definitions/UltralightC.LockPage"
        },
        {
          "$ref": "#/definitions/UltralightC.ReadPage"
        },
        {
          "$ref": "#/definitions/UltralightC.WritePage"
        },
        {
          "$ref": "#/definitions/DESFire.AbortTransaction"
        },
        {
          "$ref": "#/definitions/DESFire.Authenticate"
        },
        {
          "$ref": "#/definitions/DESFire.AuthenticateAES"
        },
        {
          "$ref": "#/definitions/DESFire.AuthenticateEV2First"
        },
        {
          "$ref": "#/definitions/DESFire.ChangeFileSettings"
        },
        {
          "$ref": "#/definitions/DESFire.ChangeKey"
        },
        {
          "$ref": "#/definitions/DESFire.ChangeKeyEV2"
        },
        {
          "$ref": "#/definitions/DESFire.ChangeKeySettings"
        },
        {
          "$ref": "#/definitions/DESFire.CommitTransaction"
        },
        {
          "$ref": "#/definitions/DESFire.CreateApplication"
        },
        {
          "$ref": "#/definitions/DESFire.CreateApplicationEV1"
        },
        {
          "$ref": "#/definitions/DESFire.CreateApplicationEV2"
        },
        {
          "$ref": "#/definitions/DESFire.CreateBackupFile"
        },
        {
          "$ref": "#/definitions/DESFire.CreateCyclicRecordFile"
        },
        {
          "$ref": "#/definitions/DESFire.CreateDelegatedApplication"
        },
        {
          "$ref": "#/definitions/DESFire.CreateLinearRecordFile"
        },
        {
          "$ref": "#/definitions/DESFire.CreateStdDataFile"
        },
        {
          "$ref": "#/definitions/DESFire.CreateStdDataFileEV1"
        },
        {
          "$ref": "#/definitions/DESFire.CreateTransactionMACFile"
        },
        {
          "$ref": "#/definitions/DESFire.CreateValueFile"
        },
        {
          "$ref": "#/definitions/DESFire.Credit"
        },
        {
          "$ref": "#/definitions/DESFire.Debit"
        },
        {
          "$ref": "#/definitions/DESFire.DeleteApplication"
        },
        {
          "$ref": "#/definitions/DESFire.DeleteFile"
        },
        {
          "$ref": "#/definitions/DESFire.Erase"
        },
        {
          "$ref": "#/definitions/DESFire.FinalizeKeySet"
        },
        {
          "$ref": "#/definitions/DESFire.InitializeKeySet"
        },
        {
          "$ref": "#/definitions/DESFire.ProximityCheck"
        },
        {
          "$ref": "#/definitions/DESFire.ReadData"
        },
        {
          "$ref": "#/definitions/DESFire.RollKeySet"
        },
        {
          "$ref": "#/definitions/DESFire.SelectApplication"
        },
        {
          "$ref": "#/definitions/DESFire.SetConfiguration"
        },
        {
          "$ref": "#/definitions/DESFire.SetConfigurationEV2"
        },
        {
          "$ref": "#/definitions/DESFire.SetConfigurationMessaging"
        },
        {
          "$ref": "#/definitions/DESFire.WriteData"
        },
        {
          "$ref": "#/definitions/DESFire.WriteRecord"
        }
      ]  
    },
    "ChipService": {
      "required": [
        "$type"
      ],
      "discriminator": {
        "propertyName": "$type",
        "mapping": {
          "CardSerialNumberService": "#/definitions/CardSerialNumberService",
          "ChangeActionPropertyService": "#/definitions/ChangeActionPropertyService",
          "CryptoDataService": "#/definitions/CryptoDataService",
          "ParseAccessControlDataService": "#/definitions/ParseAccessControlDataService",
          "PrepareAccessControlDataService": "#/definitions/PrepareAccessControlDataService",
          "UpdateBufferService": "#/definitions/UpdateBufferService"
        }
      },
      "oneOf": [
          {
            "$ref": "#/definitions/CardSerialNumberService"
          },
          {
            "$ref": "#/definitions/ChangeActionPropertyService"
          },
          {
            "$ref": "#/definitions/CryptoDataService"
          },
          {
            "$ref": "#/definitions/ParseAccessControlDataService"
          },
          {
            "$ref": "#/definitions/PrepareAccessControlDataService"
          },
          {
            "$ref": "#/definitions/UpdateBufferService"
          }
        ]
    },
    "CredentialKey": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "minLength": 1,
          "type": "string"
        },
        "ownerId": {
          "type": "string",
          "format": "uuid"
        },
        "keyType": {
          "type": "string",
          "nullable": true
        },
        "keyStoreType": {
          "type": "string",
          "nullable": true
        },
        "keyStore": {
          "type": "string",
          "nullable": true
        },
        "keyStoreReference": {
          "type": "string",
          "nullable": true
        },
        "value": {
          "type": "string",
          "nullable": true
        },
        "version": {
          "type": "integer",
          "format": "int32",
          "nullable": true
        },
        "scope": {
          "allOf": [
            {
              "$ref": "#/definitions/CredentialKeyScope"
            }
          ]
        },
        "scopeDiversifier": {
          "type": "string",
          "nullable": true
        },
        "lastUpdate": {
          "type": "string",
          "format": "date-time"
        }
      },
      "additionalProperties": false
    },
    "CredentialKeyScope": {
      "enum": [
        0,
        1
      ],
      "type": "integer",
      "format": "int32"
    },
    "CryptoDataService": {
      "type": "object",
      "title": "Crypto Data",
      "allOf": [
        {
          "$ref": "#/definitions/EncodingServiceProperties"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "CryptoDataService" ],
          "default": "CryptoDataService",
          "x-hidden": true
        },
        "key": {
          "allOf": [
            {
              "$ref": "#/definitions/KeyReference"
            }
          ],
          "title": "Key",
          "description": "The key to use fo the crypto operation."
        },
        "crypto": {
          "allOf": [
            {
              "$ref": "#/definitions/CryptoProperties"
            }
          ],
          "title": "Crypto Properties",
          "description": "The cryptographic properties."
        },
        "initializationVectorField": {
          "type": "string",
          "title": "Initialization Vector Field",
          "description": "A credential field to use as Initialization Vector.",
          "nullable": true
        }
      },
      "description": "Crypto encoding service properties."
    },
    "CryptoProperties": {
      "type": "object",
      "properties": {
        "operation": {
          "enum": [
            "encrypt",
            "decrypt",
            "sign"
          ],
          "enumNames": [
            "Encrypt",
            "Decrypt",
            "Sign"
          ],
          "title": "Operation",
          "type": "string"
        },
        "hashAlgorithm": {
          "type": "string",
          "nullable": true,
          "title": "Hash Algorithm"
        },
        "cipherMode": {
          "enum": [
            "cbc",
            "ecb",
            "ofb",
            "cfb",
            "cts"
          ],
          "type": "string",
          "nullable": true,
          "title": "Cipher Mode"
        },
        "paddingMode": {
          "enum": [
            "none",
            "pkcs7",
            "zeros",
            "ansix923",
            "iso10126"
          ],
          "type": "string",
          "nullable": true,
          "title": "Padding Mode"
        }
      },
      "additionalProperties": false
    },
    "CustomAccessControlFormat": {
      "type": "object",
      "title": "Custom",
      "properties": {
        "$type": {
          "enum": [ "Custom" ],
          "default": "Custom",
          "x-hidden": true
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "The access control format name."
        },
        "fields": {
          "type": "array",
          "title": "Fields",
          "description": "Fields of the format",
          "items": {
            "$ref": "#/definitions/AccessControlDataField"
          }
        }
      }
    },
    "DataFieldBase": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "title": "Name",
          "description": "The field name"
        }
      }
    },
    "DESFire.AbortTransaction": {
      "type": "object",
      "title": "DESFire - Abort Transaction",
      "allOf": [
        {
          "$ref": "#/definitions/DESFire.DESFireActionProperties"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "DESFire.AbortTransaction" ],
          "default": "DESFire.AbortTransaction",
          "x-hidden": true
        }
      },
      "description": "Abort a previously started transaction."
    },
    "DESFire.Authenticate": {
      "type": "object",
      "title": "DESFire - Authenticate",
      "allOf": [
        {
          "$ref": "#/definitions/DESFire.DESFireActionProperties"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "DESFire.Authenticate" ],
          "default": "DESFire.Authenticate",
          "x-hidden": true
        },
        "keyNo": {
          "type": "integer",
          "title": "Key No",
          "description": "The PICC key number.",
          "format": "int32",
          "default": 0
        },
        "key": {
          "allOf": [
            {
              "$ref": "#/definitions/KeyReference"
            }
          ],
          "title": "Key",
          "description": "The key to use for authentication."
        }
      },
      "description": "Authenticate with a PICC key."
    },
    "DESFire.AuthenticateAES": {
      "type": "object",
      "title": "DESFire - Authenticate AES",
      "allOf": [
        {
          "$ref": "#/definitions/DESFire.DESFireActionProperties"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "DESFire.AuthenticateAES" ],
          "default": "DESFire.AuthenticateAES",
          "x-hidden": true
        },
        "keyNo": {
          "type": "integer",
          "title": "Key No",
          "description": "The PICC key number.",
          "format": "int32",
          "default": 0,
          "minimum": 0,
          "maximum": 255
        },
        "key": {
          "allOf": [
            {
              "$ref": "#/definitions/KeyReference"
            }
          ],
          "title": "Key",
          "description": "The key to use for authentication."
        }
      },
      "description": "Authenticate AES with a PICC key."
    },
    "DESFire.AuthenticateEV2First": {
      "type": "object",
      "title": "DESFire - Authenticate EV2 First",
      "allOf": [
        {
          "$ref": "#/definitions/DESFire.DESFireActionProperties"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "DESFire.AuthenticateEV2First" ],
          "default": "DESFire.AuthenticateEV2First",
          "x-hidden": true
        },
        "keyNo": {
          "type": "integer",
          "title": "Key No",
          "description": "The PICC key number.",
          "format": "int32",
          "default": 0
        },
        "key": {
          "allOf": [
            {
              "$ref": "#/definitions/KeyReference"
            }
          ],
          "title": "Key",
          "description": "The key to use for authentication."
        }
      },
      "description": "Authenticate EV2 First with a PICC key."
    },
    "DESFire.ChangeFileSettings": {
      "type": "object",
      "title": "DESFire - Change File Settings",
      "allOf": [
        {
          "$ref": "#/definitions/DESFire.DESFireActionProperties"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "DESFire.ChangeFileSettings" ],
          "default": "DESFire.ChangeFileSettings",
          "x-hidden": true
        },
        "fileNo": {
          "type": "integer",
          "title": "File No",
          "description": "The targeted file number to change settings for.",
          "format": "int32"
        },
        "encryptionMode": {
          "allOf": [
            {
              "$ref": "#/definitions/EncryptionMode"
            }
          ],
          "title": "Encryption Mode",
          "description": "The new security communication with the file."
        },
        "accessRights": {
          "allOf": [
            {
              "$ref": "#/definitions/DESFireAccessRights"
            }
          ],
          "title": "Access Rights",
          "description": "The new file access rights."
        },
        "plain": {
          "type": "boolean",
          "title": "Plain",
          "description": "True if the communication is in plain mode, false otherwise."
        }
      },
      "description": "Change a file settings."
    },
    "DESFire.ChangeKeyBase": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DESFire.DESFireActionProperties"
        }
      ],
      "properties": {
        "keyNo": {
          "type": "integer",
          "title": "Key No",
          "description": "The PICC key number.",
          "format": "int32",
          "default": 0,
          "minimum": 0,
          "maximum": 255
        },
        "key": {
          "allOf": [
            {
              "$ref": "#/definitions/KeyReference"
            }
          ],
          "title": "Key",
          "description": "The new key."
        },
        "oldKey": {
          "allOf": [
            {
              "$ref": "#/definitions/KeyReference"
            }
          ],
          "title": "Old Key",
          "description": "The old key. Should only be required if not authenticated with before."
        }
      }
    },
    "DESFire.ChangeKey": {
      "type": "object",
      "title": "DESFire - Change Key",
      "allOf": [
        {
          "$ref": "#/definitions/DESFire.ChangeKeyBase"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "DESFire.ChangeKey" ],
          "default": "DESFire.ChangeKey",
          "x-hidden": true
        }
      },
      "description": "Change a PICC key."
    },
    "DESFire.ChangeKeyEV2": {
      "type": "object",
      "title": "DESFire - Change Key EV2",
      "allOf": [
        {
          "$ref": "#/definitions/DESFire.ChangeKeyBase"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "DESFire.ChangeKeyEV2" ],
          "default": "DESFire.ChangeKeyEV2",
          "x-hidden": true
        },
        "keySet": {
          "type": "integer",
          "title": "KeySet",
          "description": "The KeySet number.",
          "format": "int32"
        }
      },
      "description": "Change a PICC key."
    },
    "DESFire.ChangeKeySettings": {
      "type": "object",
      "title": "DESFire - Change Key Settings",
      "allOf": [
        {
          "$ref": "#/definitions/DESFire.DESFireActionProperties"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "DESFire.ChangeKeySettings" ],
          "default": "DESFire.ChangeKeySettings",
          "x-hidden": true
        },
        "keySettings": {
          "allOf": [
            { "$ref": "#/definitions/DESFireKeySettingsOptions" }
          ],
          "description": "The new key settings."
        }
      },
      "description": "Change key settings of the current application."
    },
    "DESFire.CommitTransaction": {
      "type": "object",
      "title": "DESFire - Commit Transaction",
      "allOf": [
        {
          "$ref": "#/definitions/DESFire.DESFireActionProperties"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "DESFire.CommitTransaction" ],
          "default": "DESFire.CommitTransaction",
          "x-hidden": true
        }
      },
      "description": "Commit a previously started transaction."
    },
    "DESFire.CreateApplicationBase": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DESFire.DESFireActionProperties"
        }
      ],
      "properties": {
        "aid": {
          "type": "integer",
          "title": "Application Id",
          "description": "The new application identifier.",
          "format": "int32",
          "default": 1,
          "minimum": 1,
          "maximum": 16777215,
          "x-hexinput": true,
          "x-hexlength": 6
        },
        "keySettings": {
          "allOf": [
            {
              "$ref": "#/definitions/DESFireKeySettingsOptions"
            }
          ],
          "title": "Key Settings",
          "description": "The key settings for the new application.",
          "default": "default"
        },
        "maxNbKeys": {
          "type": "integer",
          "title": "Max number of keys",
          "description": "Number of PICC keys inside the application.",
          "format": "int32",
          "default": 2,
          "minimum": 1,
          "maximum": 14
        }
      }
    },
    "DESFire.CreateApplication": {
      "type": "object",
      "title": "DESFire - Create Application",
      "allOf": [
        {
          "$ref": "#/definitions/DESFire.CreateApplicationBase"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "DESFire.CreateApplication" ],
          "default": "DESFire.CreateApplication",
          "x-hidden": true
        }
      },
      "description": "Create a new application."
    },
    "DESFire.CreateApplicationEV1Base": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DESFire.CreateApplicationBase"
        }
      ],
      "properties": {
        "keyType": {
          "allOf": [
            {
              "$ref": "#/definitions/DESFireKeyType"
            }
          ],
          "title": "Key Type",
          "description": "The key type.",
          "default": "aes128"
        },
        "fidSupport": {
          "allOf": [
            {
              "$ref": "#/definitions/FidSupport"
            }
          ],
          "title": "FID Support",
          "description": "FID Support."
        },
        "isoFID": {
          "type": "integer",
          "title": "ISO FID",
          "description": "Optional ISO FID.",
          "format": "int32",
          "nullable": true
        },
        "isoDFName": {
          "type": "string",
          "title": "ISO DF Name",
          "description": "Optional ISO DF Name.",
          "nullable": true
        }
      }
    },
    "DESFire.CreateApplicationEV1": {
      "type": "object",
      "title": "DESFire - Create Application EV1",
      "allOf": [
        {
          "$ref": "#/definitions/DESFire.CreateApplicationEV1Base"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "DESFire.CreateApplicationEV1" ],
          "default": "DESFire.CreateApplicationEV1",
          "x-hidden": true
        }
      },
      "description": "Create a new EV1 application."
    },
    "DESFire.CreateApplicationEV2Base": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DESFire.CreateApplicationEV1Base"
        }
      ],
      "properties": {
        "numberKeySets": {
          "type": "integer",
          "title": "Number of KeySets",
          "description": "Number of keysets on the application.",
          "format": "int32"
        },
        "maxKeySize": {
          "type": "integer",
          "title": "Max key size",
          "description": "Max key size.",
          "format": "int32"
        },
        "actualKeySetVersion": {
          "type": "integer",
          "title": "Current KeySet version",
          "description": "The current keyset version.",
          "format": "int32"
        },
        "rollKeyNo": {
          "type": "integer",
          "title": "Rolling Key No",
          "description": "The key number for keyset rolling.",
          "format": "int32"
        },
        "specificCapabilityData": {
          "type": "boolean",
          "title": "Specific Capability Data",
          "description": "True to enable application specific capability data, false otherwise."
        },
        "specificVCKeys": {
          "type": "boolean",
          "title": "Specific Virtual Card Keys",
          "description": "True to enable application specific virtual card keys (including proximity check), false otherwise."
        }
      }
    },
    "DESFire.CreateApplicationEV2": {
      "type": "object",
      "title": "DESFire - Create Application EV2",
      "allOf": [
        {
          "$ref": "#/definitions/DESFire.CreateApplicationEV2Base"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "DESFire.CreateApplicationEV2" ],
          "default": "DESFire.CreateApplicationEV2",
          "x-hidden": true
        }
      },
      "description": "Create a new EV2 application."
    },
    "DESFire.CreateBackupFile": {
      "type": "object",
      "title": "DESFire - Create Backup File",
      "allOf": [
        {
          "$ref": "#/definitions/DESFire.CreateFile"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "DESFire.CreateBackupFile" ],
          "default": "DESFire.CreateBackupFile",
          "x-hidden": true
        },
        "fileSize": {
          "type": "integer",
          "title": "File Size",
          "description": "The new file size (in bytes).",
          "format": "int32"
        }
      },
      "description": "Create a new backup file."
    },
    "DESFire.CreateCyclicRecordFile": {
      "type": "object",
      "title": "DESFire - Create Cyclic Record File",
      "allOf": [
        {
          "$ref": "#/definitions/DESFire.CreateFile"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "DESFire.CreateCyclicRecordFile" ],
          "default": "DESFire.CreateCyclicRecordFile",
          "x-hidden": true
        },
        "recordSize": {
          "type": "integer",
          "title": "Record Size",
          "description": "Size of a record (in bytes).",
          "format": "int32",
          "minimum": 0
        },
        "maxNumberOfRecords": {
          "type": "integer",
          "title": "Max number of records",
          "description": "Maximal number of records inside the file.",
          "format": "int32",
          "default": 1,
          "minimum": 1,
          "maximum": 255
        }
      },
      "additionalProperties": false,
      "description": "Create a new cyclic record file."
    },
    "DESFire.CreateDelegatedApplication": {
      "type": "object",
      "title": "DESFire - Create Delegated Application",
      "allOf": [
        {
          "$ref": "#/definitions/DESFire.CreateApplicationEV2Base"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "DESFire.CreateDelegatedApplication" ],
          "default": "DESFire.CreateDelegatedApplication",
          "x-hidden": true
        },
        "damSlotNo": {
          "type": "integer",
          "title": "DAM Slot No",
          "description": "The DAM slot number.",
          "format": "int32"
        },
        "damSlotVersion": {
          "type": "integer",
          "title": "DAM Slot Version",
          "description": "The DAM slot version.",
          "format": "int32"
        },
        "quotaLimit": {
          "type": "integer",
          "title": "Quota Limit",
          "description": "A quota limit for the DAM.",
          "format": "int32"
        }
      },
      "description": "Create a delegated application."
    },
    "DESFire.CreateFile": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DESFire.DESFireActionProperties"
        }
      ],
      "properties": {
        "fileNo": {
          "type": "integer",
          "title": "File No",
          "description": "The file number.",
          "format": "int32",
          "default": 0,
          "minimum": 0,
          "maximum": 32
        },
        "encryptionMode": {
          "allOf": [
            {
              "$ref": "#/definitions/EncryptionMode"
            }
          ],
          "title": "Encryption Mode",
          "description": "The encryption mode for the file.",
          "default": "encrypt"
        },
        "accessRights": {
          "allOf": [
            {
              "$ref": "#/definitions/DESFireAccessRights"
            }
          ],
          "title": "Access Rights",
          "description": "The file access rights."
        }
      },
      "description": "File creation properties."
    },
    "DESFire.CreateLinearRecordFile": {
      "type": "object",
      "title": "DESFire - Create Linear Record File",
      "allOf": [
        {
          "$ref": "#/definitions/DESFire.CreateFile"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "DESFire.CreateLinearRecordFile" ],
          "default": "DESFire.CreateLinearRecordFile",
          "x-hidden": true
        },
        "recordSize": {
          "type": "integer",
          "title": "Record Size",
          "description": "Size of a record (in bytes).",
          "format": "int32"
        },
        "maxNumberOfRecords": {
          "type": "integer",
          "title": "Max Number of Records",
          "description": "Maximal number of records inside the file.",
          "format": "int32"
        }
      },
      "description": "Create a new linear record file."
    },
    "DESFire.CreateStdDataFileBase": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DESFire.CreateFile"
        }
      ],
      "properties": {
        "fileSize": {
          "type": "integer",
          "title": "File Size",
          "description": "The new file size (in bytes).",
          "format": "int32",
          "default": 32
        }
      }
    },
    "DESFire.CreateStdDataFile": {
      "type": "object",
      "title": "DESFire - Create Standard Data File",
      "allOf": [
        {
          "$ref": "#/definitions/DESFire.CreateStdDataFileBase"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "DESFire.CreateStdDataFile" ],
          "default": "DESFire.CreateStdDataFile",
          "x-hidden": true
        }
      },
      "description": "Create a new standard data file."
    },
    "DESFire.CreateStdDataFileEV1": {
      "type": "object",
      "title": "DESFire - Create Standard Data File EV1",
      "allOf": [
        {
          "$ref": "#/definitions/DESFire.CreateStdDataFileBase"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "DESFire.CreateStdDataFileEV1" ],
          "default": "DESFire.CreateStdDataFileEV1",
          "x-hidden": true
        },
        "isoFID": {
          "type": "integer",
          "title": "ISO FID",
          "description": "Optional ISO FID.",
          "format": "int32",
          "nullable": true
        }
      },
      "description": "Create a new standard data file EV1."
    },
    "DESFire.CreateTransactionMACFile": {
      "type": "object",
      "title": "DESFire - Create Transaction MAC File",
      "allOf": [
        {
          "$ref": "#/definitions/DESFire.CreateFile"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "DESFire.CreateTransactionMACFile" ],
          "default": "DESFire.CreateTransactionMACFile",
          "x-hidden": true
        },
        "key": {
          "allOf": [
            {
              "$ref": "#/definitions/KeyReference"
            }
          ],
          "title": "Key",
          "description": "The transaction MAC key."
        },
        "keyVersion": {
          "type": "integer",
          "title": "Key Version",
          "description": "The transaction MAC key version.",
          "format": "int32"
        }
      },
      "description": "Create the transaction MAC file."
    },
    "DESFire.CreateValueFile": {
      "type": "object",
      "title": "DESFire - Create Value File",
      "allOf": [
        {
          "$ref": "#/definitions/DESFire.CreateFile"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "DESFire.CreateValueFile" ],
          "default": "DESFire.CreateValueFile",
          "x-hidden": true
        },
        "lowerLimit": {
          "type": "integer",
          "title": "Low Limit",
          "description": "The lower limit.",
          "format": "int32"
        },
        "upperLimit": {
          "type": "integer",
          "title": "Upper Limit",
          "description": "The upper limit.",
          "format": "int32"
        },
        "initialValue": {
          "type": "integer",
          "title": "Initial Value",
          "description": "The file initial value.",
          "format": "int32"
        },
        "limitedCreditEnabled": {
          "type": "boolean",
          "title": "Limited Credit",
          "description": "True to enable limited credit (on a same transaction with an initial debit operation), false otherwise."
        }
      },
      "description": "Create a new value file."
    },
    "DESFire.Credit": {
      "type": "object",
      "title": "DESFire - Credit",
      "allOf": [
        {
          "$ref": "#/definitions/DESFire.DESFireActionProperties"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "DESFire.Credit" ],
          "default": "DESFire.Credit",
          "x-hidden": true
        },
        "fileNo": {
          "type": "integer",
          "title": "File No",
          "description": "The targeted file number.",
          "format": "int32",
          "minimum": 0,
          "maximum": 32
        },
        "value": {
          "type": "integer",
          "title": "Value",
          "description": "The value to debit.",
          "format": "int32"
        },
        "encryptionMode": {
          "allOf": [
            {
              "$ref": "#/definitions/EncryptionMode"
            }
          ],
          "title": "Encryption Mode",
          "description": "The communication encryption mode with the file."
        }
      },
      "description": "Credit operation."
    },
    "DESFire.DESFireActionProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EncodingActionProperties"
        }
      ],
      "description": "DESFire Encoding Action Properties"
    },
    "DESFire.Debit": {
      "type": "object",
      "title": "DESFire - Debit",
      "allOf": [
        {
          "$ref": "#/definitions/DESFire.DESFireActionProperties"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "DESFire.Debit" ],
          "default": "DESFire.Debit",
          "x-hidden": true
        },
        "fileNo": {
          "type": "integer",
          "title": "File No",
          "description": "The targeted file number.",
          "format": "int32",
          "minimum": 0,
          "maximum": 32
        },
        "value": {
          "type": "integer",
          "title": "Value",
          "description": "The value to credit.",
          "format": "int32"
        },
        "encryptionMode": {
          "allOf": [
            {
              "$ref": "#/definitions/EncryptionMode"
            }
          ],
          "title": "Encryption Mode",
          "description": "The communication encryption mode with the file."
        }
      },
      "description": "Debit operation."
    },
    "DESFire.DeleteApplication": {
      "type": "object",
      "title": "DESFire - Delete Application",
      "allOf": [
        {
          "$ref": "#/definitions/DESFire.DESFireActionProperties"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "DESFire.DeleteApplication" ],
          "default": "DESFire.DeleteApplication",
          "x-hidden": true
        },
        "aid": {
          "type": "integer",
          "title": "Application Id",
          "description": "The targeted application identifier.",
          "format": "int32",
          "default": 1,
          "minimum": 1,
          "maximum": 16777215,
          "x-hexinput": true,
          "x-hexlength": 6
        }
      },
      "description": "Delete an existing application."
    },
    "DESFire.DeleteFile": {
      "type": "object",
      "title": "DESFire - Delete File",
      "allOf": [
        {
          "$ref": "#/definitions/DESFire.DESFireActionProperties"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "DESFire.DeleteFile" ],
          "default": "DESFire.DeleteFile",
          "x-hidden": true
        },
        "fileNo": {
          "type": "integer",
          "title": "File No",
          "description": "The targeted file number.",
          "format": "int32"
        }
      },
      "description": "Delete an existing file."
    },
    "DESFire.Erase": {
      "type": "object",
      "title": "DESFire - Erase",
      "allOf": [
        {
          "$ref": "#/definitions/DESFire.DESFireActionProperties"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "DESFire.Erase" ],
          "default": "DESFire.Erase",
          "x-hidden": true
        }
      },
      "description": "Erase the PICC."
    },
    "DESFire.FinalizeKeySet": {
      "type": "object",
      "title": "DESFire - Finalize KeySet",
      "allOf": [
        {
          "$ref": "#/definitions/DESFire.DESFireActionProperties"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "DESFire.FinalizeKeySet" ],
          "default": "DESFire.FinalizeKeySet",
          "x-hidden": true
        },
        "keySetNo": {
          "type": "integer",
          "title": "KeySet No",
          "description": "The keyset number.",
          "format": "int32"
        },
        "keySetVersion": {
          "type": "integer",
          "title": "KeySet Version",
          "description": "The keyset version.",
          "format": "int32"
        }
      },
      "description": "Finalize a keyset."
    },
    "DESFire.InitializeKeySet": {
      "type": "object",
      "title": "DESFire - Initialize KeySet",
      "allOf": [
        {
          "$ref": "#/definitions/DESFire.DESFireActionProperties"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "DESFire.InitializeKeySet" ],
          "default": "DESFire.InitializeKeySet",
          "x-hidden": true
        },
        "keySetNo": {
          "type": "integer",
          "title": "KeySet No",
          "description": "The keyset number.",
          "format": "int32"
        },
        "keyType": {
          "allOf": [
            {
              "$ref": "#/definitions/DESFireKeyType"
            }
          ],
          "title": "Key Type",
          "description": "The key type."
        }
      },
      "description": "Initialize a keyset."
    },
    "DESFire.ProximityCheck": {
      "type": "object",
      "title": "DESFire - Proximity Check",
      "allOf": [
        {
          "$ref": "#/definitions/DESFire.DESFireActionProperties"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "DESFire.ProximityCheck" ],
          "default": "DESFire.ProximityCheck",
          "x-hidden": true
        },
        "key": {
          "allOf": [
            {
              "$ref": "#/definitions/KeyReference"
            }
          ],
          "title": "Key",
          "description": "The key to use for proximity check authentication."
        },
        "chunkSize": {
          "enum": [1, 2, 4],
          "type": "integer",
          "title": "Chunk Size",
          "description": "The chunk size. This value must be either 1, 2 or 4",
          "format": "int32"
        }
      },
      "description": "Perform the full proximity check."
    },
    "DESFire.ReadData": {
      "type": "object",
      "title": "DESFire - Read Data",
      "allOf": [
        {
          "$ref": "#/definitions/DESFire.DESFireActionProperties"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "DESFire.ReadData" ],
          "default": "DESFire.ReadData",
          "x-hidden": true
        },
        "fileNo": {
          "type": "integer",
          "title": "File No",
          "description": "The targeted file number.",
          "format": "int32"
        },
        "offset": {
          "type": "integer",
          "title": "Offset",
          "description": "The offset.",
          "format": "int32"
        },
        "byteLength": {
          "type": "integer",
          "title": "Length",
          "description": "Number of bytes to read.",
          "format": "int32"
        },
        "encryptionMode": {
          "allOf": [
            {
              "$ref": "#/definitions/EncryptionMode"
            }
          ],
          "title": "Encryption Mode",
          "description": "The communication encryption mode with the file."
        }
      },
      "description": "Read data from a file."
    },
    "DESFire.RollKeySet": {
      "type": "object",
      "title": "DESFire - Roll KeySet",
      "allOf": [
        {
          "$ref": "#/definitions/DESFire.DESFireActionProperties"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "DESFire.RollKeySet" ],
          "default": "DESFire.RollKeySet",
          "x-hidden": true
        },
        "keySetNo": {
          "type": "integer",
          "title": "KeySet No",
          "description": "The keyset number.",
          "format": "int32"
        }
      },
      "description": "Roll to keyset."
    },
    "DESFire.SelectApplication": {
      "type": "object",
      "title": "DESFire - Select Application",
      "allOf": [
        {
          "$ref": "#/definitions/DESFire.DESFireActionProperties"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "DESFire.SelectApplication" ],
          "default": "DESFire.SelectApplication",
          "x-hidden": true
        },
        "aid": {
          "type": "integer",
          "title": "Application Id",
          "description": "The targeted application identifier.",
          "format": "int32",
          "default": 0,
          "minimum": 0,
          "maximum": 16777215,
          "x-hexinput": true,
          "x-hexlength": 6
        }
      },
      "description": "Select an existing application."
    },
    "DESFire.SetConfigurationBase": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DESFire.DESFireActionProperties"
        }
      ],
      "properties": {
        "formatCardEnabled": {
          "type": "boolean",
          "title": "Allow Card Format",
          "description": "True to enable format/erase operation, false otherwise."
        },
        "randomIdEnabled": {
          "type": "boolean",
          "title": "Random UID/CSN",
          "description": "True to enable Random UID/CSN, false otherwise."
        },
        "defaultKey": {
          "allOf": [
            {
              "$ref": "#/definitions/KeyReference"
            }
          ],
          "title": "Default Key",
          "description": "Optionally define a new default key."
        }
      }
    },
    "DESFire.SetConfiguration": {
      "type": "object",
      "title": "DESFire - Set Configuration",
      "allOf": [
        {
          "$ref": "#/definitions/DESFire.SetConfigurationBase"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "DESFire.SetConfiguration" ],
          "default": "DESFire.SetConfiguration",
          "x-hidden": true
        }
      },
      "description": "Set new PICC configuration."
    },
    "DESFire.SetConfigurationEV2": {
      "type": "object",
      "title": "DESFire - Set Configuration EV2",
      "allOf": [
        {
          "$ref": "#/definitions/DESFire.SetConfigurationBase"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "DESFire.SetConfigurationEV2" ],
          "default": "DESFire.SetConfigurationEV2",
          "x-hidden": true
        },
        "pcMandatoryEnabled": {
          "type": "boolean",
          "title": "Required Proximity Check",
          "description": "True to enforce Proximity Check, false otherwise."
        },
        "authVCMandatoryEnabled": {
          "type": "boolean",
          "title": "Required Virtual Card authentication",
          "description": "True to enforce Virtual Card authentication, false otherwise."
        }
      },
      "description": "Set new PICC configuration."
    },
    "DESFire.SetConfigurationMessaging": {
      "type": "object",
      "title": "DESFire - Set Configuration Messaging",
      "allOf": [
        {
          "$ref": "#/definitions/DESFire.DESFireActionProperties"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "DESFire.SetConfigurationMessaging" ],
          "default": "DESFire.SetConfigurationMessaging",
          "x-hidden": true
        },
        "d40SecureMessagingEnabled": {
          "type": "boolean",
          "title": "D40 Secure Messaging",
          "description": "True to enable D40 secure messaging, false otherwise."
        },
        "eV1SecureMessagingEnabled": {
          "type": "boolean",
          "title": "EV1 Secure Messaging",
          "description": "True to enable EV1 secure messaging, false otherwise."
        },
        "eV2ChainedWritingEnabled": {
          "type": "boolean",
          "title": "EV2 Chained Writing",
          "description": "True to enable EV2 chained writing, false otherwise."
        }
      },
      "description": "Set global secure messaging configuration."
    },
    "DESFire.WriteData": {
      "type": "object",
      "title": "DESFire - Write Data",
      "allOf": [
        {
          "$ref": "#/definitions/DESFire.DESFireActionProperties"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "DESFire.WriteData" ],
          "default": "DESFire.WriteData",
          "x-hidden": true
        },
        "fileNo": {
          "type": "integer",
          "title": "File No",
          "description": "The targeted file number.",
          "format": "int32",
          "default": 0,
          "minimum": 0,
          "maximum": 32
        },
        "offset": {
          "type": "integer",
          "title": "Offset",
          "description": "The offset.",
          "format": "int32",
          "default": 0,
          "minimum": 0
        },
        "encryptionMode": {
          "allOf": [
            {
              "$ref": "#/definitions/EncryptionMode"
            }
          ],
          "title": "Encryption Mode",
          "description": "The communication encryption mode with the file.",
          "default": "encrypt"
        }
      },
      "description": "Write data to a file."
    },
    "DESFire.WriteRecord": {
      "type": "object",
      "title": "DESFire - Write Record",
      "allOf": [
        {
          "$ref": "#/definitions/DESFire.DESFireActionProperties"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "DESFire.WriteRecord" ],
          "default": "DESFire.WriteRecord",
          "x-hidden": true
        },
        "fileNo": {
          "type": "integer",
          "title": "File No",
          "description": "The targeted file number.",
          "format": "int32",
          "minimum": 0,
          "maximum": 32
        },
        "offset": {
          "type": "integer",
          "title": "Offset",
          "description": "The offset.",
          "format": "int32"
        },
        "encryptionMode": {
          "allOf": [
            {
              "$ref": "#/definitions/EncryptionMode"
            }
          ],
          "title": "Encryption Mode",
          "description": "The communication encryption mode with the file."
        }
      },
      "description": "Write a new record to a file."
    },
    "DESFireAccessRights": {
      "type": "object",
      "properties": {
        "readAccess": {
          "allOf": [
            {
              "$ref": "#/definitions/TaskAccessRights"
            }
          ],
          "title": "Read",
          "description": "Read access",
          "default": "key1"
        },
        "writeAccess": {
          "allOf": [
            {
              "$ref": "#/definitions/TaskAccessRights"
            }
          ],
          "title": "Write",
          "description": "Write access",
          "default": "key0"
        },
        "readAndWriteAccess": {
          "allOf": [
            {
              "$ref": "#/definitions/TaskAccessRights"
            }
          ],
          "title": "Read & Write",
          "description": "Read and Write access",
          "default": "key0"
        },
        "changeAccess": {
          "allOf": [
            {
              "$ref": "#/definitions/TaskAccessRights"
            }
          ],
          "title": "Access Rights Change",
          "description": "Access Rights change access",
          "default": "key0"
        }
      },
      "additionalProperties": false,
      "description": "DESFire File Access Rights"
    },
    "DESFireKeySettings": {
      "enum": [
        "changeKeyWithMasterKey",
        "allowChangeMasterKey",
        "freeListingWithoutMasterKey",
        "freeCreateDeleteWithoutMasterKey",
        "configurationChangeable",
        "default",
        "changeKeyWithTargetedKeyNo",
        "changeKeyFrozen"
      ],
      "enumNames": [
        "Change Key with the Master Key",
        "Allow to change the Master Key",
        "Free listing without the Master Key",
        "Free Create and Delete without the Master Key",
        "Configuration is Changeable",
        "Default",
        "Change Key with targeted Key No",
        "Change Key is frozen"
      ],
      "type": "string",
      "description": "DESFire Key Settings"
    },
    "DESFireKeySettingsCleaned": {
      "enum": [
        "allowChangeMasterKey",
        "freeListingWithoutMasterKey",
        "freeCreateDeleteWithoutMasterKey",
        "configurationChangeable",
        "changeKeyWithTargetedKeyNo",
        "changeKeyFrozen"
      ],
      "enumNames": [
        "Allow to change the Master Key",
        "Free listing without the Master Key",
        "Free Create and Delete without the Master Key",
        "Configuration is Changeable",
        "Change Key with targeted Key No",
        "Change Key is frozen"
      ],
      "type": "string",
      "description": "DESFire Key Settings"
    },
    "DESFireKeySettingsOptions": {
      "oneOf": [
        {
          "$ref": "#/definitions/DESFireKeySettings",
          "title": "Key Settings (one, deprecated)"
        },
        {
          "type": "array",
          "title": "Key Settings (multiple)",
          "items": {
            "$ref": "#/definitions/DESFireKeySettingsCleaned"
          },
          "uniqueItems": true
        }
      ],
      "title": "Key Settings"
    },
    "DESFireKeyType": {
      "enum": [
        "des",
        "tk3des",
        "aes128"
      ],
      "type": "string",
      "description": "DESFire Key Type."
    },
    "DivInputFragment": {
      "type": "object",
      "properties": {
        "type": {
          "allOf": [
            {
              "$ref": "#/definitions/DivInputFragmentType"
            }
          ],
          "description": "The fragment type."
        },
        "value": {
          "type": "string",
          "description": "The fragment value.",
          "nullable": true
        }
      },
      "additionalProperties": false,
      "description": "Div Input fragment."
    },
    "DivInputFragmentType": {
      "enum": [
        0,
        1
      ],
      "type": "integer",
      "description": "Div Input fragment type.",
      "format": "int32"
    },
    "EncodingActionProperties": {
      "required": [
        "$type"
      ],
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "title": "Label",
          "description": "The optional action indicative label.",
          "nullable": true
        },
        "group": {
          "type": "string",
          "description": "The optional action group, mainly used to regroup visually several operations.",
          "nullable": true,
          "x-hidden": true
        },
        "servicesBefore": {
          "type": "array",
          "title": "Services Before",
          "items": {
            "$ref": "#/definitions/ChipService",
            "description": "Encoding service properties."
          },
          "description": "The card services to execute before the action.",
          "nullable": true
        },
        "servicesAfter": {
          "type": "array",
          "title": "Services After",
          "items": {
            "$ref": "#/definitions/ChipService",
            "description": "Encoding service properties."
          },
          "description": "The card services to execute after the action.",
          "nullable": true
        },
        "onSuccess": {
          "allOf": [
            {
              "$ref": "#/definitions/ActionTrigger"
            }
          ],
          "title": "On Success",
          "description": "The action to trigger on action execution success."
        },
        "onFailure": {
          "allOf": [
            {
              "$ref": "#/definitions/ActionTrigger"
            }
          ],
          "title": "On Failure",
          "description": "The action to trigger on action execution failure."
        }
      },
      "description": "Encoding Action Properties"
    },
    "EncodingServiceBufferBehavior": {
      "enum": [
        "doNothing",
        "overwrite",
        "append",
        "prepend"
      ],
      "enumNames": [
        "Do Nothing",
        "Overwrite",
        "Append",
        "Preprend"
      ],
      "type": "string",
      "description": "Buffer behavior on the shared temporary buffer from encoding service.",
      "default": "overwrite"
    },
    "EncodingServiceProperties": {
      "required": [
        "$type"
      ],
      "type": "object",
      "properties": {
        "bufferBehavior": {
          "allOf": [
            {
              "$ref": "#/definitions/EncodingServiceBufferBehavior"
            }
          ],
          "title": "Buffer Behavior",
          "description": "The behavior on the temporary buffer shared between services and actions."
        },
        "copyBufferToField": {
          "type": "string",
          "title": "Copy Buffer to Field",
          "description": "Copy the buffer, after service execution, to a credential field.",
          "nullable": true
        },
        "fieldNamePrefix": {
          "type": "string",
          "title": "Field Name Prefix",
          "description": "An optional prefix to apply to field names of the service.",
          "nullable": true
        }
      },
      "description": "Encoding service properties."
    },
    "EncryptionMode": {
      "enum": [
        "plain",
        "mac",
        "encrypt",
        "unknown"
      ],
      "enumNames": [
        "Plain",
        "MAC",
        "Encrypt",
        "Unknown"
      ],
      "type": "string",
      "title": "Encryption Mode",
      "description": "The communication encryption mode."
    },
    "FidSupport": {
      "enum": [
        "disabled",
        "enabled"
      ],
      "type": "string",
      "description": "FID Support"
    },
    "KeyDiversification": {
      "type": "object",
      "properties": {
        "algorithm": {
          "enum": [
            "an0945",
            "an10922",
            "sagem",
            "omnitech"
          ],
          "type": "string",
          "title": "Algorithm",
          "description": "The diversification algorithm.",
          "nullable": true
        }
      },
      "dependencies": {
        "algorithm": {
          "oneOf": [
            {
              "properties": {
                "algorithm": {
                  "enum": [
                    "an0945",
                    "sagem",
                    "omnitech"
                  ]
                }
              }
            },
            {
              "properties": {
                "algorithm": {
                  "enum": [
                    "an10922"
                  ]
                },
                "input": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DivInputFragment"
                  },
                  "title": "Div Input",
                  "description": "Div Input fragments to use."
                },
                "revertAID": {
                  "type": "boolean",
                  "title": "Revert AID",
                  "description": "Use revert AID.",
                  "nullable": true
                },
                "forceK2Use": {
                  "type": "boolean",
                  "title": "Force K2",
                  "description": "Force K2 use.",
                  "nullable": true
                },
                "systemIdentifier": {
                  "type": "string",
                  "title": "System Identifier",
                  "description": "The System Identifier.",
                  "nullable": true
                }
              }
            }
          ]
        }
      },
      "description": "Key Diversification details."
    },
    "KeyReference": {
      "type": "object",
      "properties": {
        "keyId": {
          "type": "string",
          "title": "Key Id",
          "description": "The key identifier.",
          "nullable": true,
          "x-key": true
        },
        "diversification": {
          "allOf": [
            {
              "$ref": "#/definitions/KeyDiversification"
            }
          ],
          "title": "Key Diversification",
          "description": "Optional key diversification."
        }
      },
      "additionalProperties": false,
      "description": "The key reference.",
      "nullable": true
    },
    "NumberDataField": {
      "type": "object",
      "title": "Number Data Field",
      "allOf": [
        {
          "$ref": "#/definitions/ValueDataField"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "Number" ],
          "default": "Number",
          "x-hidden": true
        },
        "value": {
          "type": "integer",
          "title": "Value",
          "description": "A numeric value.",
          "format": "int64"
        }
      },
      "description": "A field with numeric value."
    },
    "Nothing": {
      "type": "object",
      "title": "Nothing",
      "allOf": [
        {
          "$ref": "#/definitions/EncodingActionProperties"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "Nothing" ],
          "default": "Nothing",
          "x-hidden": true
        }
      },
      "description": "Do nothing. Action placeholder for delayed services execution."
    },
    "ParityDataField": {
      "type": "object",
      "title": "Parity Data Field",
      "allOf": [
        {
          "$ref": "#/definitions/DataFieldBase"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "Parity" ],
          "default": "Parity"
        },
        "parityType": {
          "type": "string",
          "enum": ["even", "odd"],
          "title": "Parity Type",
          "description": "The parity type.",
          "default": "even"
        },
        "bits": {
          "type": "array",
          "title": "Bits",
          "description": "Bits used for parity calculation.",
          "items": {
            "type": "integer"
          }
        }
      },
      "description": "A parity field."
    },
    "ParseAccessControlDataService": {
      "type": "object",
      "title": "Parse Access Control Data",
      "allOf": [
        {
          "$ref": "#/definitions/AccessControlDataService"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "ParseAccessControlDataService" ],
          "default": "ParseAccessControlDataService",
          "x-hidden": true
        }
      },
      "description": "Parse Access Control data encoding service, previously read or prepared."
    },
    "PrepareAccessControlDataService": {
      "type": "object",
      "title": "Prepare Access Control Data",
      "allOf": [
        {
          "$ref": "#/definitions/AccessControlDataService"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "PrepareAccessControlDataService" ],
          "default": "PrepareAccessControlDataService",
          "x-hidden": true
        }
      },
      "description": "Prepare Access Control data encoding service, for further writing."
    },
    "SAMProperties": {
      "type": "object",
      "properties": {
        "unlockKeyNo": {
          "type": "integer",
          "title": "Unlock Key No",
          "description": "The SAM unlock key number.",
          "format": "int32",
          "minimum": 0,
          "maximum": 127
        },
        "unlockKey": {
          "allOf": [
            {
              "$ref": "#/definitions/KeyReference"
            }
          ],
          "title": "Unlock Key",
          "description": "The SAM unlock key details."
        }
      },
      "additionalProperties": false,
      "description": "SAM properties."
    },
    "StringDataField": {
      "type": "object",
      "title": "String Data Field",
      "allOf": [
        {
          "$ref": "#/definitions/ValueDataField"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "String" ],
          "default": "String",
          "x-hidden": true
        },
        "charset": {
          "type": "string",
          "enum": ["ascii", "utf8"],
          "title": "Charset",
          "description": "The string charset.",
          "default": "ascii"
        },
        "paddingChar": {
          "type": "string",
          "title": "Padding Char",
          "description": "The padding character.",
          "maxLength": 1
        },
        "value": {
          "type": "string",
          "title": "Value",
          "description": "The string value."
        }
      },
      "description": "A field with string data."
    },
    "TaskAccessRights": {
      "enum": [
        "key0",
        "key1",
        "key2",
        "key3",
        "key4",
        "key5",
        "key6",
        "key7",
        "key8",
        "key9",
        "key10",
        "key11",
        "key12",
        "key13",
        "free",
        "never"
      ],
      "type": "string",
      "description": "Key Reference for Access Rights"
    },
    "UltralightC.Authenticate": {
      "type": "object",
      "title": "Ultralight C - Authenticate",
      "allOf": [
        {
          "$ref": "#/definitions/UltralightC.UltralightCActionProperties"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "UltralightC.Authenticate" ],
          "default": "UltralightC.Authenticate",
          "x-hidden": true
        },
        "key": {
          "allOf": [
            {
              "$ref": "#/definitions/KeyReference"
            }
          ],
          "description": "The key to use for authentication."
        }
      },
      "description": "Authenticate."
    },
    "UltralightC.ChangeKey": {
      "type": "object",
      "title": "Ultralight C - Change Key",
      "allOf": [
        {
          "$ref": "#/definitions/UltralightC.UltralightCActionProperties"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "UltralightC.ChangeKey" ],
          "default": "UltralightC.ChangeKey",
          "x-hidden": true
        },
        "key": {
          "allOf": [
            {
              "$ref": "#/definitions/KeyReference"
            }
          ],
          "description": "The new key."
        }
      },
      "description": "Change the PICC key."
    },
    "UltralightC.LockPage": {
      "type": "object",
      "title": "Ultralight C - Lock Page",
      "allOf": [
        {
          "$ref": "#/definitions/UltralightC.UltralightCActionProperties"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "UltralightC.LockPage" ],
          "default": "UltralightC.LockPage",
          "x-hidden": true
        },
        "page": {
          "type": "integer",
          "description": "The page number.",
          "format": "int32"
        }
      },
      "description": "Lock a page."
    },
    "UltralightC.ReadPage": {
      "type": "object",
      "title": "Ultralight C - Read Page",
      "allOf": [
        {
          "$ref": "#/definitions/UltralightC.UltralightCActionProperties"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "UltralightC.ReadPage" ],
          "default": "UltralightC.ReadPage",
          "x-hidden": true
        },
        "page": {
          "type": "integer",
          "description": "The page number.",
          "format": "int32"
        }
      },
      "description": "Read data from a page."
    },
    "UltralightC.UltralightCActionProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EncodingActionProperties"
        }
      ],
      "description": "Ultralight C Encoding Action Properties"
    },
    "UltralightC.WritePage": {
      "type": "object",
      "title": "Ultralight C - Write Page",
      "allOf": [
        {
          "$ref": "#/definitions/UltralightC.UltralightCActionProperties"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "UltralightC.WritePage" ],
          "default": "UltralightC.WritePage",
          "x-hidden": true
        },
        "page": {
          "type": "integer",
          "description": "The page number.",
          "format": "int32"
        }
      },
      "description": "Write data to a page."
    },
    "UpdateBufferService": {
      "type": "object",
      "title": "Update Buffer",
      "allOf": [
        {
          "$ref": "#/definitions/EncodingServiceProperties"
        }
      ],
      "properties": {
        "$type": {
          "enum": [ "UpdateBufferService" ],
          "default": "UpdateBufferService",
          "x-hidden": true
        },
        "fromField": {
          "type": "string",
          "title": "From Field",
          "description": "The credential field containing data.",
          "nullable": true
        },
        "isDataRequired": {
          "type": "boolean",
          "title": "Data Required",
          "description": "True if data is required (will throw), false otherwise (will be ignored)."
        }
      },
      "additionalProperties": false,
      "description": "Update buffer encoding service properties."
    },
    "ValueDataField": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DataFieldBase"
        }
      ],
      "properties": {
        "isFixedField": {
          "type": "boolean",
          "title": "Is Fixed Field",
          "description": "The field is a fixed value field."
        },
        "isIdentifier": {
          "type": "boolean",
          "title": "Is Identifier",
          "description": "The field is an identifier."
        },
        "length": {
          "type": "integer",
          "title": "Length",
          "description": "The field length (in bits).",
          "default": 0,
          "minimum": 0
        },
        "dataType": {
          "type": "string",
          "enum": ["bcdByte", "bcdNibble", "binary"],
          "title": "Data Type",
          "description": "The field data type.",
          "default": "binary"
        },
        "dataRepresentation": {
          "type": "string",
          "enum": ["bigEndian", "littleEndian", "none"],
          "title": "Data Representation",
          "description": "The field data representation.",
          "default": "bigEndian"
        }
      }
    },
    "Wiegand26AccessControlFormat": {
      "type": "object",
      "title": "Wiegand 26",
      "properties": {
        "$type": {
          "enum": [ "Wiegand26" ],
          "default": "Wiegand26",
          "x-hidden": true
        },
        "facilityCode": {
          "type": "integer",
          "title": "Facility Code",
          "description": "The facility code."
        }
      }
    },
    "Wiegand34AccessControlFormat": {
      "type": "object",
      "title": "Wiegand 34",
      "properties": {
        "$type": {
          "enum": [ "Wiegand34" ],
          "default": "Wiegand34",
          "x-hidden": true
        }
      }
    },
    "Wiegand34WithFacilityAccessControlFormat": {
      "type": "object",
      "title": "Wiegand 34 with Facility Code",
      "properties": {
        "$type": {
          "enum": [ "Wiegand34WithFacility" ],
          "default": "Wiegand34WithFacility",
          "x-hidden": true
        },
        "facilityCode": {
          "type": "integer",
          "title": "Facility Code",
          "description": "The facility code."
        }
      }
    },
    "Wiegand35AccessControlFormat": {
      "type": "object",
      "title": "Wiegand 35",
      "properties": {
        "$type": {
          "enum": [ "Wiegand35" ],
          "default": "Wiegand35",
          "x-hidden": true
        },
        "companyCode": {
          "type": "integer",
          "title": "Company Code",
          "description": "The company code."
        }
      }
    },
    "Wiegand37AccessControlFormat": {
      "type": "object",
      "title": "Wiegand 37",
      "properties": {
        "$type": {
          "enum": [ "Wiegand37" ],
          "default": "Wiegand37",
          "x-hidden": true
        }
      }
    },
    "Wiegand37WithFacilityAccessControlFormat": {
      "type": "object",
      "title": "Wiegand 37 with Facility Code",
      "properties": {
        "$type": {
          "enum": [ "Wiegand37WithFacility" ],
          "default": "Wiegand37WithFacility",
          "x-hidden": true
        },
        "facilityCode": {
          "type": "integer",
          "title": "Facility Code",
          "description": "The facility code."
        }
      }
    }
  }
}